{
  "name": "publish",
  "version": "0.3.2",
  "description": "npm auto publishing of your modules",
  "main": "index.js",
  "homepage": "https://github.com/cmanzana/node-publish",
  "bin": {
    "publish": "./bin/publish.js"
  },
  "scripts": {
    "test": "mocha --globals name"
  },
  "dependencies": {
    "npm": "1.1.x",
    "npmlog": "0.0.2",
    "semver": "1.0.x",
    "nopt": "1.0.x"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:cmanzana/node-publish.git"
  },
  "keywords": [
    "npm",
    "publish",
    "deploy",
    "CI"
  ],
  "devDependencies": {
    "mocha": "1.3.0"
  },
  "author": {
    "name": "Carlos Manzanares",
    "email": "carlos.manzanares@gmail.com"
  },
  "license": "MIT",
  "readme": "# publish\n\n[![Build Status](https://secure.travis-ci.org/cmanzana/node-publish.png)](http://travis-ci.org/cmanzana/node-publish)\n\nnpm module to automate publishing of npm modules\nUseful when you want to publish every time you bump the version in your module as part of your continuos integration setup.\n\nWhen running publish in your module:\n- if your module is not yet in the registry then publish will do nothing (you need to publish manually the first version of your module)\n- if your module has the same version, or lower version than the version in the registry then publish will do nothing\n- if your module has bigger version than the version in the registry then publish will perform a ['npm publish'](http://npmjs.org/doc/publish.html) of your module\n\n## Installation\n\nnpm install publish\n\n## Usage\n\nThe most common way of using publish is to have it as a posttest script in your package.json:\n\n    \"scripts\": {\n      \"test\": \"tap test/*.js\", // tap as an example\n      \"posttest\": \"publish\"\n    }\n\nwhich means that on successful test run, publish will try to 'npm publish' your module.\n\nNotice that your CI machine needs to be configured with an npm user (http://npmjs.org/doc/adduser.html) that is\nauthorized to publish the package.\n\nThe options that you can use with publish are:\n\n* --on-major  Publishes on major version changes.\n* --on-minor  Publishes on minor version changes.\n* --on-patch  Publishes on patch version changes.\n* --on-build  Publishes on build version changes.\n* --version   Print the version of publish.\n* --help      Print the help of publish.\n\n### Examples\n\n    publish --on-major --on-minor\n\nwill only publish when the local major or minor versions are higher than the remote ones\n\n    publish --on-build\n\nwill only publish when the local build version is higher than the remote one\n\n    publish\n\nwill only publish when the local version is higher than the remote one\n\n\n## License\n[MIT](https://github.com/cmanzana/node-publish/blob/master/MIT-LICENSE)",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cmanzana/node-publish/issues"
  },
  "_id": "publish@0.3.2",
  "_shasum": "b551aed99df3646d98c0fb89bd784193e7f6c75b",
  "_from": "publish@0.3.2",
  "_resolved": "http://registry.npmjs.org/publish/-/publish-0.3.2.tgz"
}
